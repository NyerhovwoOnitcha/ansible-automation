pipeline {
  agent any

  environment{ 
    ANSIBLE_CONFIG="${WORKSPACE}/deploy/ansible.cfg"
  }

  stages{
    stage('Initial Cleanup') {
      steps {
        dir("${WORKSPACE}") {
          deleteDir()
        }
      }
    }

    stage('checkout SCM') {
      steps {
        git branch: 'main', url: ''
      }
    }

    stage('Prepare Ansible for execution') {
      steps {
        sh 'echo ${WORKSPACE}' 
        sh 'sed -i "3 a roles_path=${WORKSPACE}/roles" ${WORKSPACE}/deploy/ansible.cfg'  
      }
    }

    stage('Run ansible') {
      steps {
        ansiblePlaybook become: true, colorized: true, credentialsId: 'private-key', disableHostKeyChecking: true, installation: 'Ansible 2.9.6', inventory: 'inventory/dev', playbook: 'playbooks/site.yml'
      }
    }

    stage('clean workspace') {
      steps {
        cleanWs()
      }
    }

  }
}

//    pipeline {
//     agent any

//   stages {
//     stage('Initial Cleanup') {
//       steps {
//         dir("${WORKSPACE}") {
//           deleteDir()
//         }
          
//       }
//     }
    
//     stage('Build') {
//       steps {
//         script {
//           sh 'echo "Building Stage"'
//         }
//       }
//     }

//     stage('Test') {
//       steps {
//         script {
//           sh 'echo "Testing Stage"'
//         }
//       }
//     }

//     stage('Package') {
//       steps {
//         script {
//           sh 'echo "Packaging Stage"'
//         }
//       }
//     }

//     stage('Deploy') {
//       steps {
//         script {
//           sh 'echo "Deploying to app "'
//         }
//       }
//     }

//     stage('Testing my cleanup') {
//       steps {
//         script{
//           sh 'echo "Testing my cleanup"'
//         }
//       }
//     }

//     stage('Clean workspace after build') {
//       steps {
//         cleanWs()      
//       }
//     }
//     }
// }